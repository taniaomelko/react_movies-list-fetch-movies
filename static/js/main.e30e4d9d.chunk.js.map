{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","shouldRender","setShouldRender","findMovie","newMovie","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","onKeyDown","preventDefault","onClick","App","data","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e30e4d9d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","const BASE_URL = `http://www.omdbapi.com/?apikey=8424f04f&t=`;\n\n// export function getMovie(title) {\n//   return fetch(`${BASE_URL}${title}`)\n//     .then(response => response.json());\n// }\n\nexport const getMovie = async(title) => {\n  const response = await fetch(`${BASE_URL}${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(false);\n  const [shouldRender, setShouldRender] = useState(false);\n\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const findMovie = async() => {\n    const newMovie = await getMovie(title);\n\n    if (newMovie.Response === 'False') {\n      setError(true);\n      setShouldRender(false);\n\n      return;\n    }\n\n    setMovie({\n      title: newMovie.Title,\n      description: newMovie.Plot,\n      imgUrl: newMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n      imdbId: newMovie.imdbID,\n    });\n    setError(false);\n    setShouldRender(true);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${error ? 'is-danger' : ''}`}\n              value={title}\n              onChange={handleChange}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  findMovie();\n                }\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setTitle('');\n                setShouldRender(false);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {shouldRender && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: propTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    const isMovieInTheList = movies.some(movie => (\n      movie.imdbId === newMovie.imdbId\n    ));\n\n    if (isMovieInTheList) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}